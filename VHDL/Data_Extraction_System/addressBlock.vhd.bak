library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
USE ieee.std_logic_arith.all;
use IEEE.std_logic_unsigned.all;


entity addressBlock is
	generic (Count : integer := 25);
	port 
	(
		--Inputs
		CLK	   : in std_logic;	
		NXTADD	: in std_logic;
		
		--Outputs
		ADDRESS 	: OUT std_logic_vector(15 downto 0)
	);
end entity;


architecture addressBlock of addressBlock is	
type state_extraction  is (IDLE, START, WAITING, NXT);	
signal state   : state_extraction;				
begin	
	process(CLK)
	variable addNo :  integer := 0;
	BEGIN
		if(rising_edge(CLK)) then
		
			if(NXTADD = '1') then
				if(addNo = 12) then
					addNo := 0;
				else
					addNo := addNo + 1;
				end if;
			end if;
			case addNo is
				when 0 =>
					
				when 1 =>

				when 2 =>

				when 3 =>
				
				when 4 =>

				when 5 =>

				when 6 =>

				when 7 =>
				
				when 8 =>

				when 9 =>

				when 10 =>

				when 11 =>

				when others =>

			end case;
		end if;
	END PROCESS;
	
end addressBlock;